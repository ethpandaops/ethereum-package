
endpoints:
{{ range $client := .ClientInfo }}
- name: "{{ $client.Name }}"
  consensusUrl: "http://{{ $client.CLIPAddr }}:{{ $client.CLPortNum }}"
  executionUrl: "http://{{ $client.ELIPAddr }}:{{ $client.ELPortNum }}"
{{- end }}

web:
  server:
    host: "0.0.0.0"
    port: 8080
  frontend:
    enabled: true
    debug: true
    pprof: true

validatorNames:
  inventoryYaml: "/validator-ranges/validator-ranges.yaml"

globalVars:
  validatorPairNames:
{{ range $client := .ClientInfo }}
  - "{{ $client.Name }}"
{{- end }}

tests:
- name: "Check chain stability"
  timeout: 2h
  tasks:
  - name: check_clients_are_healthy
    title: "Check if at least one client is ready"
    timeout: 5m
    config:
      minClientCount: 1

  - name: run_tasks_concurrent
    title: "Check if all EL & CL clients are synced"
    timeout: 30m
    config:
      tasks:
      - name: check_consensus_sync_status
        title: "Check if CL clients are synced"
      - name: check_execution_sync_status
        title: "Check if EL clients are synced"
  
  - name: run_tasks_concurrent
    title: "Check chain stability"
    timeout: 1h
    config:
      tasks:
      - name: check_consensus_finality
        title: "Check consensus chain finality"
        config:
          minFinalizedEpochs: 2
          maxUnfinalizedEpochs: 3
      - name: check_consensus_attestation_stats
        title: "Check consensus attestation stats"
        config:
          minTargetPercent: 98
          minHeadPercent: 80
      - name: check_consensus_reorgs
        title: "Check consensus reorgs"
        config:
          maxReorgsPerEpoch: 2
          minCheckEpochCount: 1

- name: "Every client pair proposed block"
  timeout: 2h
  disable: false
  tasks:
  - name: check_clients_are_healthy
    title: "Check if at least one client is ready"
    timeout: 5m
    config:
      minClientCount: 1
  
  - name: run_task_matrix
    title: "Check block proposals from all client pairs"
    configVars:
      matrixValues: "validatorPairNames"
    config:
      runConcurrent: true
      matrixVar: "validatorPairName"
      task:
        name: check_consensus_block_proposals
        title: "Wait for block proposal from ${validatorPairName}"
        configVars:
          validatorNamePattern: "validatorPairName"
