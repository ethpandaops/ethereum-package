
endpoints:
{{ range $client := .ClientInfo }}
- name: "{{ $client.Name }}"
  consensusUrl: "http://{{ $client.CLIPAddr }}:{{ $client.CLPortNum }}"
  executionUrl: "http://{{ $client.ELIPAddr }}:{{ $client.ELPortNum }}"
{{- end }}

web:
  server:
    host: "0.0.0.0"
    port: 8080
  frontend:
    enabled: true
    debug: true
    pprof: true

validatorNames:
  inventoryYaml: "/validator-ranges/validator-ranges.yaml"

globalVars:
  validatorPairNames:
{{ range $client := .ClientInfo }}
  - "{{ $client.Name }}"
{{- end }}

tests:
- name: "Check chain stability"
  timeout: 2h
  tasks:
  - name: check_clients_are_healthy
    title: "Check if at least one client is ready"
    timeout: 5m
    config:
      minClientCount: 1

  - name: run_tasks_concurrent
    title: "Check if all EL & CL clients are synced"
    timeout: 30m
    config:
      tasks:
      - name: check_consensus_sync_status
        title: "Check if CL clients are synced"
      - name: check_execution_sync_status
        title: "Check if EL clients are synced"
  
  - name: run_tasks_concurrent
    title: "Check chain stability"
    timeout: 1h
    config:
      tasks:
      - name: check_consensus_finality
        title: "Check consensus chain finality"
        config:
          minFinalizedEpochs: 2
          maxUnfinalizedEpochs: 3
      - name: check_consensus_attestation_stats
        title: "Check consensus attestation stats"
        config:
          minTargetPercent: 98
          minHeadPercent: 80
      - name: check_consensus_reorgs
        title: "Check consensus reorgs"
        config:
          maxReorgsPerEpoch: 2
          minCheckEpochCount: 1

- name: "Every client pair proposed block"
  timeout: 2h
  disable: false
  tasks:
  - name: check_clients_are_healthy
    title: "Check if at least one client is ready"
    timeout: 5m
    config:
      minClientCount: 1
  
  - name: run_task_matrix
    title: "Check block proposals from all client pairs"
    configVars:
      matrixValues: "validatorPairNames"
    config:
      runConcurrent: true
      matrixVar: "validatorPairName"
      task:
        name: check_consensus_block_proposals
        title: "Wait for block proposal from ${validatorPairName}"
        configVars:
          validatorNamePattern: "validatorPairName"

{{ if .RunLifecycleTest }}
- name: "Validator Lifecycle Test"
  timeout: 48h
  tasks:
  - name: check_clients_are_healthy
    title: "Check if at least one client is ready"
    timeout: 5m
    config:
      minClientCount: 1
  
  - name: run_tasks_concurrent
    title: "Generate deposits & Track inclusion"
    config:
      tasks:
      - name: generate_deposits
        title: "Generate 300 deposits"
        config:
          mnemonic: "trial jeans seat abstract runway cupboard please elevator club file arrow lounge crash sun thumb clock duty priority key fence funny trick diary album"
          limitTotal: 300
          #limitPerSlot: 50
          walletPrivkey: "850643a0224065ecce3882673c21f56bcf6eef86274cc21cadff15930b59fc8c"
          depositContract: "0x4242424242424242424242424242424242424242"

      - name: run_task_matrix
        title: "Check deposit inclusion with all client pairs"
        configVars:
          matrixValues: "validatorPairNames"
        config:
          runConcurrent: true
          matrixVar: "validatorPairName"
          task:
            name: check_consensus_block_proposals
            title: "Wait for block proposal with deposits from ${validatorPairName}"
            configVars:
              validatorNamePattern: "validatorPairName"
            config:
              minDepositCount: 1
      
  # due to the deposits we should reach un-finality soon.
  - name: check_consensus_validator_status
    title: "Wait for the last deposit to become activated"
    timeout: 1h
    config:
      validatorPubKey: 0xa4a6121cb76eaf63e520615368a21d504c6f7363b5045f965e3587f623a6f7f1ce32af63ce3c535e75cd831db27c5abd
      validatorStatus:
      - active_ongoing

  # due to the deposits we should have reached un-finality now.
  - name: check_consensus_finality
    title: "Check for consensus chain un-finality"
    timeout: 1m
    config:
      minUnfinalizedEpochs: 5

  # check if all client pairs propose blocks with bls changes during un-finality
  - name: run_tasks_concurrent
    title: "Check if all clients propose blocks with BLS changes during un-finality"
    config:
      tasks:
      - name: generate_bls_changes
        title: "Generate 1 bls change per slot"
        config:
          mnemonic: "trial jeans seat abstract runway cupboard please elevator club file arrow lounge crash sun thumb clock duty priority key fence funny trick diary album"
          limitTotal: 50
          limitPerSlot: 1
          indexCount: 100
          targetAddress: 0x65D08a056c17Ae13370565B04cF77D2AfA1cB9FA

      - name: run_task_matrix
        title: "Check bls change inclusion with all client pairs"
        configVars:
          matrixValues: "validatorPairNames"
        config:
          runConcurrent: true
          matrixVar: "validatorPairName"
          task:
            name: check_consensus_block_proposals
            title: "Wait for block proposal with deposits from ${validatorPairName}"
            configVars:
              validatorNamePattern: "validatorPairName"
            config:
              minBlsChangeCount: 1
  
  # check if all client pairs propose blocks with exits during un-finality
  - name: run_tasks_concurrent
    title: "Check if all clients propose blocks with exits during un-finality"
    config:
      tasks:
      - name: generate_exits
        title: "Generate 1 exit per slot"
        config:
          mnemonic: "trial jeans seat abstract runway cupboard please elevator club file arrow lounge crash sun thumb clock duty priority key fence funny trick diary album"
          limitTotal: 50
          limitPerSlot: 1
          indexCount: 100

      - name: run_task_matrix
        title: "Check exit inclusion with all client pairs"
        configVars:
          matrixValues: "validatorPairNames"
        config:
          runConcurrent: true
          matrixVar: "validatorPairName"
          task:
            name: check_consensus_block_proposals
            title: "Wait for block proposal with deposits from ${validatorPairName}"
            configVars:
              validatorNamePattern: "validatorPairName"
            config:
              minExitCount: 1

  # exit 100 validators and wait for finality
  - name: generate_exits
    title: "Exit 100 Validators"
    config:
      mnemonic: "trial jeans seat abstract runway cupboard please elevator club file arrow lounge crash sun thumb clock duty priority key fence funny trick diary album"
      indexCount: 100
  - name: check_consensus_finality
    title: "Wait for consensus chain finality"
    timeout: 1h
    config:
      maxUnfinalizedEpochs: 4

  # check if all client pairs propose blocks with bls changes during finality
  - name: run_tasks_concurrent
    title: "Check if all clients propose blocks with BLS changes during finality"
    config:
      tasks:
      - name: generate_bls_changes
        title: "Generate 1 bls change per slot"
        config:
          mnemonic: "trial jeans seat abstract runway cupboard please elevator club file arrow lounge crash sun thumb clock duty priority key fence funny trick diary album"
          startIndex: 100
          limitTotal: 100
          limitPerSlot: 1
          indexCount: 100
          targetAddress: 0x65D08a056c17Ae13370565B04cF77D2AfA1cB9FA

      - name: run_task_matrix
        title: "Check bls change inclusion with all client pairs"
        configVars:
          matrixValues: "validatorPairNames"
        config:
          runConcurrent: true
          matrixVar: "validatorPairName"
          task:
            name: check_consensus_block_proposals
            title: "Wait for block proposal with deposits from ${validatorPairName}"
            configVars:
              validatorNamePattern: "validatorPairName"
            config:
              minBlsChangeCount: 1
  
  # check if all client pairs propose blocks with exits during finality
  - name: run_tasks_concurrent
    title: "Check if all clients propose blocks with exits during finality"
    config:
      tasks:
      - name: generate_exits
        title: "Generate 1 exit per slot"
        config:
          mnemonic: "trial jeans seat abstract runway cupboard please elevator club file arrow lounge crash sun thumb clock duty priority key fence funny trick diary album"
          startIndex: 100
          limitTotal: 100
          limitPerSlot: 1
          indexCount: 100

      - name: run_task_matrix
        title: "Check exit inclusion with all client pairs"
        configVars:
          matrixValues: "validatorPairNames"
        config:
          runConcurrent: true
          matrixVar: "validatorPairName"
          task:
            name: check_consensus_block_proposals
            title: "Wait for block proposal with deposits from ${validatorPairName}"
            configVars:
              validatorNamePattern: "validatorPairName"
            config:
              minExitCount: 1

  cleanupTasks:
  - name: generate_exits
    title: "Exit all test validators"
    config:
      mnemonic: "trial jeans seat abstract runway cupboard please elevator club file arrow lounge crash sun thumb clock duty priority key fence funny trick diary album"
      limitTotal: 300
      indexCount: 300

{{ end }}