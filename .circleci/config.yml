version: 2.1

orbs:
  kurtosis-docs-checker: kurtosis-tech/docs-checker@0.2.3

executors:
  ubuntu_vm:
    machine:
      image: ubuntu-2004:202201-02

parameters:
  # To enable/disable the check_latest_version workflow execution which will be triggered by this scheduled pipeline: https://app.circleci.com/settings/project/github/kurtosis-tech/eth2-package/triggers
  should-enable-check-latest-version-workflow:
    type: boolean
    default: false
  # To enable/disable the check_code workflow execution which will be triggered by the PR's checkers
  should-enable-build-workflow:
    type: boolean
    default: true

# Install go version 1.19 to run our integration tests on the minimal version we support
setup_kurtosis: &setup_kurtosis
  - run: |
      echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
      sudo apt update
      sudo apt install kurtosis-cli
      kurtosis config init dont-send-metrics
      kurtosis engine restart

# Generate the nightly test jobs dynamically based on JSON files
generate_nightly_test_jobs: &generate_nightly_test_jobs
  run: |
    for file in ./.circleci/tests/*.json; do
      test_name=$(basename "$file" .json)
      echo "Creating job for $test_name"
      cat << EOF >> .circleci/config.yml
        $test_name:
          executor: ubuntu_vm
          resource_class: xlarge
          steps:
            - <<: *setup_kurtosis
            - checkout
            - run: kurtosis run \${PWD} \"\$(cat $file)\"
        EOF
    done

jobs:
  run_starlark:
    executor: ubuntu_vm
    steps:
      - <<: *setup_kurtosis
      - checkout
      - run: kurtosis run \${PWD}

  check_latest_version:
    executor: ubuntu_vm
    resource_class: xlarge
    steps:
      - <<: *setup_kurtosis
      - checkout
      - run: kurtosis run --dry-run \${PWD}

workflows:
  version: 2
  nightly_tests_workflow:
    jobs:
      - run_starlark

      # Conditionally enable check_latest_version workflow
      - if: << pipeline.parameters.should-enable-check-latest-version-workflow >>
        run: check_latest_version

      # Generate nightly test jobs
      - <<: *generate_nightly_test_jobs

      # Conditionally enable check_code workflow
      - if: << pipeline.parameters.should-enable-build-workflow >>
        run: nightly_test_*
