name: Docker login
descritpion: Log in to Docker Hub
inputs:
  username:
     required: true
  password:
     required: true
runs:
  using: composite
  steps:
    - name: Check for Docker Hub credentials
      shell: bash
      env:
        DOCKER_USERNAME: ${{ inputs.username }}
        DOCKER_PASSWORD: ${{ inputs.password }}
      run: |
        if [ -z "$DOCKER_USERNAME" ] || [ -z "$DOCKER_PASSWORD" ]; then
          echo "AUTH_EXISTS=false" >> $GITHUB_ENV
          echo "No credentials provided"
        else
          echo "AUTH_EXISTS=true" >> $GITHUB_ENV
          echo "Credentials provided"
        fi

    - name: Login to Docker Hub
      if: env.AUTH_EXISTS == 'true'
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Check Docker Hub Rate Limits
      shell: bash
      env:
        DOCKER_USERNAME: ${{ inputs.username }}
        DOCKER_PASSWORD: ${{ inputs.password }}
      run: |
        if [ "$AUTH_EXISTS" = "true" ]; then
            echo "Authenticated."
            TOKEN=$(curl -s --user "${DOCKER_USERNAME}:${DOCKER_PASSWORD}" "https://auth.docker.io/token?service=registry.docker.io&scope=repository:ratelimitpreview/test:pull" | jq -r .token)
        else
            echo "Unauthenticated."
            TOKEN=$(curl -s "https://auth.docker.io/token?service=registry.docker.io&scope=repository:ratelimitpreview/test:pull" | jq -r .token)
        fi
        echo "Rate limits:"
        curl -s --head -H "Authorization: Bearer $TOKEN" https://registry-1.docker.io/v2/ratelimitpreview/test/manifests/latest 2>&1 | grep ratelimit
